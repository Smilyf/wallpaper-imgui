<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup>
    <ResolveNugetPackages>false</ResolveNugetPackages>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
<<<<<<< HEAD
    <ProjectGuid>{1F064F52-FEE6-3EB8-9369-1CB9DF17663C}</ProjectGuid>
=======
    <ProjectGuid>{C3D41AF6-33E7-32B6-8260-5AA92DFAFCEC}</ProjectGuid>
>>>>>>> origin/main
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.22000.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>ZERO_CHECK</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
<<<<<<< HEAD
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui\backends;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\include;C:\Users\yam_l\wallpaper-imgui\opencv\build\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\ffmpeg\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\SDL2\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
=======
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\imgui;C:\Users\yam_l\wallpaper-imgui\imgui\backends;\usr\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
>>>>>>> origin/main
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
<<<<<<< HEAD
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui\backends;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\include;C:\Users\yam_l\wallpaper-imgui\opencv\build\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\ffmpeg\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\SDL2\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
=======
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\imgui;C:\Users\yam_l\wallpaper-imgui\imgui\backends;\usr\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
>>>>>>> origin/main
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
<<<<<<< HEAD
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui\backends;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\include;C:\Users\yam_l\wallpaper-imgui\opencv\build\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\ffmpeg\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\SDL2\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
=======
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\imgui;C:\Users\yam_l\wallpaper-imgui\imgui\backends;\usr\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
>>>>>>> origin/main
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
<<<<<<< HEAD
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui\backends;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\include;C:\Users\yam_l\wallpaper-imgui\opencv\build\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\ffmpeg\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\SDL2\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
=======
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\imgui;C:\Users\yam_l\wallpaper-imgui\imgui\backends;\usr\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
>>>>>>> origin/main
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
<<<<<<< HEAD
    <CustomBuild Include="C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\13fa902e114aa6d5e3abdf27cadb5d53\generate.stamp.rule">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
D:\sf\cmake\bin\cmake.exe -SC:/Users/yam_l/wallpaper-imgui/wallpaper-imgui -BC:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file C:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/build/openglim.sln
=======
    <CustomBuild Include="C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\b29c2bb32b13110f9c3354eddb01b0f7\generate.stamp.rule">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -SC:/Users/yam_l/wallpaper-imgui -BC:/Users/yam_l/wallpaper-imgui/build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file C:/Users/yam_l/wallpaper-imgui/build/openglim.sln
>>>>>>> origin/main
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
<<<<<<< HEAD
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVConfig-version.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVConfig.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVModules-debug.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVModules-release.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVModules.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\CMakeLists.txt;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeCXXCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeRCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeSystem.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeCInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeCXXInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeCommonLanguageInclude.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeGenericSystem.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeInitializeConfigs.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeLanguageInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeRCInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeSystemSpecificInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeSystemSpecificInitialize.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\MSVC-C.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\MSVC-CXX.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\MSVC.cmake;D:\sf\cmake\share\cmake-3.26\Modules\FindPackageHandleStandardArgs.cmake;D:\sf\cmake\share\cmake-3.26\Modules\FindPackageMessage.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows-MSVC-C.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows-MSVC-CXX.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows-MSVC.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\WindowsPaths.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
D:\sf\cmake\bin\cmake.exe -SC:/Users/yam_l/wallpaper-imgui/wallpaper-imgui -BC:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file C:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/build/openglim.sln
=======
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCXXInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeGenericSystem.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeLanguageInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeRCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\WindowsPaths.cmake;C:\Users\yam_l\wallpaper-imgui\CMakeLists.txt;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeCXXCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeRCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeSystem.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -SC:/Users/yam_l/wallpaper-imgui -BC:/Users/yam_l/wallpaper-imgui/build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file C:/Users/yam_l/wallpaper-imgui/build/openglim.sln
>>>>>>> origin/main
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
<<<<<<< HEAD
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVConfig-version.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVConfig.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVModules-debug.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVModules-release.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVModules.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\CMakeLists.txt;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeCXXCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeRCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeSystem.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeCInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeCXXInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeCommonLanguageInclude.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeGenericSystem.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeInitializeConfigs.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeLanguageInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeRCInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeSystemSpecificInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeSystemSpecificInitialize.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\MSVC-C.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\MSVC-CXX.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\MSVC.cmake;D:\sf\cmake\share\cmake-3.26\Modules\FindPackageHandleStandardArgs.cmake;D:\sf\cmake\share\cmake-3.26\Modules\FindPackageMessage.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows-MSVC-C.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows-MSVC-CXX.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows-MSVC.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\WindowsPaths.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
D:\sf\cmake\bin\cmake.exe -SC:/Users/yam_l/wallpaper-imgui/wallpaper-imgui -BC:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file C:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/build/openglim.sln
=======
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCXXInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeGenericSystem.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeLanguageInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeRCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\WindowsPaths.cmake;C:\Users\yam_l\wallpaper-imgui\CMakeLists.txt;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeCXXCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeRCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeSystem.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -SC:/Users/yam_l/wallpaper-imgui -BC:/Users/yam_l/wallpaper-imgui/build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file C:/Users/yam_l/wallpaper-imgui/build/openglim.sln
>>>>>>> origin/main
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
<<<<<<< HEAD
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVConfig-version.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVConfig.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVModules-debug.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVModules-release.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVModules.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\CMakeLists.txt;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeCXXCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeRCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeSystem.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeCInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeCXXInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeCommonLanguageInclude.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeGenericSystem.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeInitializeConfigs.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeLanguageInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeRCInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeSystemSpecificInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeSystemSpecificInitialize.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\MSVC-C.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\MSVC-CXX.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\MSVC.cmake;D:\sf\cmake\share\cmake-3.26\Modules\FindPackageHandleStandardArgs.cmake;D:\sf\cmake\share\cmake-3.26\Modules\FindPackageMessage.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows-MSVC-C.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows-MSVC-CXX.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows-MSVC.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\WindowsPaths.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
D:\sf\cmake\bin\cmake.exe -SC:/Users/yam_l/wallpaper-imgui/wallpaper-imgui -BC:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file C:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/build/openglim.sln
=======
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCXXInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeGenericSystem.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeLanguageInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeRCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\WindowsPaths.cmake;C:\Users\yam_l\wallpaper-imgui\CMakeLists.txt;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeCXXCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeRCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeSystem.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -SC:/Users/yam_l/wallpaper-imgui -BC:/Users/yam_l/wallpaper-imgui/build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file C:/Users/yam_l/wallpaper-imgui/build/openglim.sln
>>>>>>> origin/main
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
<<<<<<< HEAD
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVConfig-version.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVConfig.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVModules-debug.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVModules-release.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVModules.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\CMakeLists.txt;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeCXXCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeRCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeSystem.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeCInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeCXXInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeCommonLanguageInclude.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeGenericSystem.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeInitializeConfigs.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeLanguageInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeRCInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeSystemSpecificInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeSystemSpecificInitialize.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\MSVC-C.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\MSVC-CXX.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\MSVC.cmake;D:\sf\cmake\share\cmake-3.26\Modules\FindPackageHandleStandardArgs.cmake;D:\sf\cmake\share\cmake-3.26\Modules\FindPackageMessage.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows-MSVC-C.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows-MSVC-CXX.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows-MSVC.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\WindowsPaths.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\generate.stamp</Outputs>
=======
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCXXInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeGenericSystem.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeLanguageInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeRCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\WindowsPaths.cmake;C:\Users\yam_l\wallpaper-imgui\CMakeLists.txt;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeCXXCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeRCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeSystem.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\generate.stamp</Outputs>
>>>>>>> origin/main
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>