<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
<<<<<<< HEAD
    <ProjectGuid>{11CF1C02-4485-34C4-B3E0-A20950C7AAF2}</ProjectGuid>
=======
    <ProjectGuid>{8B43018E-72DF-3B0D-BC3E-1722F5D31FDF}</ProjectGuid>
>>>>>>> origin/main
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.22000.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>openglim</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
<<<<<<< HEAD
    <CharacterSet>Unicode</CharacterSet>
=======
    <CharacterSet>MultiByte</CharacterSet>
>>>>>>> origin/main
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
<<<<<<< HEAD
    <CharacterSet>Unicode</CharacterSet>
=======
    <CharacterSet>MultiByte</CharacterSet>
>>>>>>> origin/main
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
<<<<<<< HEAD
    <CharacterSet>Unicode</CharacterSet>
=======
    <CharacterSet>MultiByte</CharacterSet>
>>>>>>> origin/main
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
<<<<<<< HEAD
    <CharacterSet>Unicode</CharacterSet>
=======
    <CharacterSet>MultiByte</CharacterSet>
>>>>>>> origin/main
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
<<<<<<< HEAD
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\Debug\</OutDir>
=======
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\yam_l\wallpaper-imgui\build\Debug\</OutDir>
>>>>>>> origin/main
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">openglim.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">openglim</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
<<<<<<< HEAD
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\Release\</OutDir>
=======
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\yam_l\wallpaper-imgui\build\Release\</OutDir>
>>>>>>> origin/main
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">openglim.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">openglim</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
<<<<<<< HEAD
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\MinSizeRel\</OutDir>
=======
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\yam_l\wallpaper-imgui\build\MinSizeRel\</OutDir>
>>>>>>> origin/main
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">openglim.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">openglim</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</GenerateManifest>
<<<<<<< HEAD
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\RelWithDebInfo\</OutDir>
=======
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\yam_l\wallpaper-imgui\build\RelWithDebInfo\</OutDir>
>>>>>>> origin/main
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">openglim.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">openglim</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
<<<<<<< HEAD
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui\backends;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\include;C:\Users\yam_l\wallpaper-imgui\opencv\build\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\ffmpeg\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\SDL2\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /utf-8</AdditionalOptions>
=======
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\imgui;C:\Users\yam_l\wallpaper-imgui\imgui\backends;\usr\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
>>>>>>> origin/main
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <LanguageStandard>stdcpp20</LanguageStandard>
<<<<<<< HEAD
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
=======
>>>>>>> origin/main
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
<<<<<<< HEAD
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;_CRT_SECURE_NO_WARNINGS;UNICODE;_UNICODE;CMAKE_INTDIR="Debug"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_DEBUG;_WINDOWS;_CRT_SECURE_NO_WARNINGS;UNICODE;_UNICODE;CMAKE_INTDIR=\"Debug\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui\backends;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\include;C:\Users\yam_l\wallpaper-imgui\opencv\build\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\ffmpeg\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\SDL2\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui\backends;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\include;C:\Users\yam_l\wallpaper-imgui\opencv\build\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\ffmpeg\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\SDL2\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
=======
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;CMAKE_INTDIR="Debug"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_DEBUG;_WINDOWS;CMAKE_INTDIR=\"Debug\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\imgui;C:\Users\yam_l\wallpaper-imgui\imgui\backends;\usr\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\imgui;C:\Users\yam_l\wallpaper-imgui\imgui\backends;\usr\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
>>>>>>> origin/main
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
<<<<<<< HEAD
      <AdditionalDependencies>d3d12.lib;d3dcompiler.lib;dxgi.lib;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\SDL2\lib\x64\*.lib;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\ffmpeg\lib\*.lib;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\lib\freetype.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
=======
      <AdditionalDependencies>d3d12.lib;d3dcompiler.lib;dxgi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
>>>>>>> origin/main
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
<<<<<<< HEAD
      <ImportLibrary>C:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/build/Debug/openglim.lib</ImportLibrary>
      <ProgramDataBaseFile>C:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/build/Debug/openglim.pdb</ProgramDataBaseFile>
=======
      <ImportLibrary>C:/Users/yam_l/wallpaper-imgui/build/Debug/openglim.lib</ImportLibrary>
      <ProgramDataBaseFile>C:/Users/yam_l/wallpaper-imgui/build/Debug/openglim.pdb</ProgramDataBaseFile>
>>>>>>> origin/main
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
<<<<<<< HEAD
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui\backends;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\include;C:\Users\yam_l\wallpaper-imgui\opencv\build\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\ffmpeg\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\SDL2\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /utf-8</AdditionalOptions>
=======
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\imgui;C:\Users\yam_l\wallpaper-imgui\imgui\backends;\usr\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
>>>>>>> origin/main
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <LanguageStandard>stdcpp20</LanguageStandard>
<<<<<<< HEAD
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
=======
>>>>>>> origin/main
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
<<<<<<< HEAD
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;_CRT_SECURE_NO_WARNINGS;NDEBUG;UNICODE;_UNICODE;CMAKE_INTDIR="Release"</PreprocessorDefinitions>
=======
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="Release"</PreprocessorDefinitions>
>>>>>>> origin/main
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
<<<<<<< HEAD
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;_CRT_SECURE_NO_WARNINGS;NDEBUG;UNICODE;_UNICODE;CMAKE_INTDIR=\"Release\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui\backends;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\include;C:\Users\yam_l\wallpaper-imgui\opencv\build\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\ffmpeg\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\SDL2\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui\backends;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\include;C:\Users\yam_l\wallpaper-imgui\opencv\build\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\ffmpeg\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\SDL2\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
=======
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"Release\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\imgui;C:\Users\yam_l\wallpaper-imgui\imgui\backends;\usr\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\imgui;C:\Users\yam_l\wallpaper-imgui\imgui\backends;\usr\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
>>>>>>> origin/main
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
<<<<<<< HEAD
      <AdditionalDependencies>d3d12.lib;d3dcompiler.lib;dxgi.lib;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\SDL2\lib\x64\*.lib;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\ffmpeg\lib\*.lib;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\lib\freetype.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
=======
      <AdditionalDependencies>d3d12.lib;d3dcompiler.lib;dxgi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
>>>>>>> origin/main
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
<<<<<<< HEAD
      <ImportLibrary>C:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/build/Release/openglim.lib</ImportLibrary>
      <ProgramDataBaseFile>C:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/build/Release/openglim.pdb</ProgramDataBaseFile>
=======
      <ImportLibrary>C:/Users/yam_l/wallpaper-imgui/build/Release/openglim.lib</ImportLibrary>
      <ProgramDataBaseFile>C:/Users/yam_l/wallpaper-imgui/build/Release/openglim.pdb</ProgramDataBaseFile>
>>>>>>> origin/main
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
<<<<<<< HEAD
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui\backends;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\include;C:\Users\yam_l\wallpaper-imgui\opencv\build\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\ffmpeg\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\SDL2\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /utf-8</AdditionalOptions>
=======
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\imgui;C:\Users\yam_l\wallpaper-imgui\imgui\backends;\usr\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
>>>>>>> origin/main
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpp20</LanguageStandard>
<<<<<<< HEAD
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
=======
>>>>>>> origin/main
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
<<<<<<< HEAD
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;_CRT_SECURE_NO_WARNINGS;NDEBUG;UNICODE;_UNICODE;CMAKE_INTDIR="MinSizeRel"</PreprocessorDefinitions>
=======
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="MinSizeRel"</PreprocessorDefinitions>
>>>>>>> origin/main
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
<<<<<<< HEAD
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;_CRT_SECURE_NO_WARNINGS;NDEBUG;UNICODE;_UNICODE;CMAKE_INTDIR=\"MinSizeRel\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui\backends;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\include;C:\Users\yam_l\wallpaper-imgui\opencv\build\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\ffmpeg\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\SDL2\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui\backends;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\include;C:\Users\yam_l\wallpaper-imgui\opencv\build\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\ffmpeg\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\SDL2\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
=======
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"MinSizeRel\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\imgui;C:\Users\yam_l\wallpaper-imgui\imgui\backends;\usr\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\imgui;C:\Users\yam_l\wallpaper-imgui\imgui\backends;\usr\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
>>>>>>> origin/main
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
<<<<<<< HEAD
      <AdditionalDependencies>d3d12.lib;d3dcompiler.lib;dxgi.lib;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\SDL2\lib\x64\*.lib;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\ffmpeg\lib\*.lib;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\lib\freetype.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
=======
      <AdditionalDependencies>d3d12.lib;d3dcompiler.lib;dxgi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
>>>>>>> origin/main
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
<<<<<<< HEAD
      <ImportLibrary>C:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/build/MinSizeRel/openglim.lib</ImportLibrary>
      <ProgramDataBaseFile>C:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/build/MinSizeRel/openglim.pdb</ProgramDataBaseFile>
=======
      <ImportLibrary>C:/Users/yam_l/wallpaper-imgui/build/MinSizeRel/openglim.lib</ImportLibrary>
      <ProgramDataBaseFile>C:/Users/yam_l/wallpaper-imgui/build/MinSizeRel/openglim.pdb</ProgramDataBaseFile>
>>>>>>> origin/main
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
<<<<<<< HEAD
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui\backends;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\include;C:\Users\yam_l\wallpaper-imgui\opencv\build\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\ffmpeg\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\SDL2\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /utf-8</AdditionalOptions>
=======
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\imgui;C:\Users\yam_l\wallpaper-imgui\imgui\backends;\usr\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
>>>>>>> origin/main
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpp20</LanguageStandard>
<<<<<<< HEAD
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
=======
>>>>>>> origin/main
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
<<<<<<< HEAD
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;_CRT_SECURE_NO_WARNINGS;NDEBUG;UNICODE;_UNICODE;CMAKE_INTDIR="RelWithDebInfo"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;_CRT_SECURE_NO_WARNINGS;NDEBUG;UNICODE;_UNICODE;CMAKE_INTDIR=\"RelWithDebInfo\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui\backends;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\include;C:\Users\yam_l\wallpaper-imgui\opencv\build\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\ffmpeg\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\SDL2\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\imgui\backends;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\include;C:\Users\yam_l\wallpaper-imgui\opencv\build\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\ffmpeg\include;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\SDL2\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
=======
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="RelWithDebInfo"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"RelWithDebInfo\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\imgui;C:\Users\yam_l\wallpaper-imgui\imgui\backends;\usr\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\yam_l\wallpaper-imgui\imgui;C:\Users\yam_l\wallpaper-imgui\imgui\backends;\usr\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
>>>>>>> origin/main
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
<<<<<<< HEAD
      <AdditionalDependencies>d3d12.lib;d3dcompiler.lib;dxgi.lib;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\SDL2\lib\x64\*.lib;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\..\ffmpeg\lib\*.lib;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\lib\freetype.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
=======
      <AdditionalDependencies>d3d12.lib;d3dcompiler.lib;dxgi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
>>>>>>> origin/main
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
<<<<<<< HEAD
      <ImportLibrary>C:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/build/RelWithDebInfo/openglim.lib</ImportLibrary>
      <ProgramDataBaseFile>C:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/build/RelWithDebInfo/openglim.pdb</ProgramDataBaseFile>
=======
      <ImportLibrary>C:/Users/yam_l/wallpaper-imgui/build/RelWithDebInfo/openglim.lib</ImportLibrary>
      <ProgramDataBaseFile>C:/Users/yam_l/wallpaper-imgui/build/RelWithDebInfo/openglim.pdb</ProgramDataBaseFile>
>>>>>>> origin/main
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
<<<<<<< HEAD
    <CustomBuild Include="C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule C:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
D:\sf\cmake\bin\cmake.exe -SC:/Users/yam_l/wallpaper-imgui/wallpaper-imgui -BC:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/build --check-stamp-file C:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/build/CMakeFiles/generate.stamp
=======
    <CustomBuild Include="C:\Users\yam_l\wallpaper-imgui\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule C:/Users/yam_l/wallpaper-imgui/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -SC:/Users/yam_l/wallpaper-imgui -BC:/Users/yam_l/wallpaper-imgui/build --check-stamp-file C:/Users/yam_l/wallpaper-imgui/build/CMakeFiles/generate.stamp
>>>>>>> origin/main
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
<<<<<<< HEAD
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVConfig-version.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVConfig.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVModules-debug.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVModules-release.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVModules.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeCXXCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeRCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeSystem.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeCInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeCXXInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeCommonLanguageInclude.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeGenericSystem.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeInitializeConfigs.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeLanguageInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeRCInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeSystemSpecificInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeSystemSpecificInitialize.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\MSVC-C.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\MSVC-CXX.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\MSVC.cmake;D:\sf\cmake\share\cmake-3.26\Modules\FindPackageHandleStandardArgs.cmake;D:\sf\cmake\share\cmake-3.26\Modules\FindPackageMessage.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows-MSVC-C.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows-MSVC-CXX.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows-MSVC.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\WindowsPaths.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule C:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
D:\sf\cmake\bin\cmake.exe -SC:/Users/yam_l/wallpaper-imgui/wallpaper-imgui -BC:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/build --check-stamp-file C:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/build/CMakeFiles/generate.stamp
=======
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCXXInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeGenericSystem.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeLanguageInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeRCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\WindowsPaths.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeCXXCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeRCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeSystem.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule C:/Users/yam_l/wallpaper-imgui/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -SC:/Users/yam_l/wallpaper-imgui -BC:/Users/yam_l/wallpaper-imgui/build --check-stamp-file C:/Users/yam_l/wallpaper-imgui/build/CMakeFiles/generate.stamp
>>>>>>> origin/main
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
<<<<<<< HEAD
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVConfig-version.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVConfig.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVModules-debug.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVModules-release.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVModules.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeCXXCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeRCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeSystem.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeCInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeCXXInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeCommonLanguageInclude.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeGenericSystem.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeInitializeConfigs.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeLanguageInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeRCInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeSystemSpecificInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeSystemSpecificInitialize.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\MSVC-C.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\MSVC-CXX.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\MSVC.cmake;D:\sf\cmake\share\cmake-3.26\Modules\FindPackageHandleStandardArgs.cmake;D:\sf\cmake\share\cmake-3.26\Modules\FindPackageMessage.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows-MSVC-C.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows-MSVC-CXX.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows-MSVC.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\WindowsPaths.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule C:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
D:\sf\cmake\bin\cmake.exe -SC:/Users/yam_l/wallpaper-imgui/wallpaper-imgui -BC:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/build --check-stamp-file C:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/build/CMakeFiles/generate.stamp
=======
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCXXInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeGenericSystem.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeLanguageInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeRCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\WindowsPaths.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeCXXCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeRCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeSystem.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule C:/Users/yam_l/wallpaper-imgui/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -SC:/Users/yam_l/wallpaper-imgui -BC:/Users/yam_l/wallpaper-imgui/build --check-stamp-file C:/Users/yam_l/wallpaper-imgui/build/CMakeFiles/generate.stamp
>>>>>>> origin/main
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
<<<<<<< HEAD
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVConfig-version.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVConfig.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVModules-debug.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVModules-release.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVModules.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeCXXCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeRCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeSystem.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeCInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeCXXInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeCommonLanguageInclude.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeGenericSystem.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeInitializeConfigs.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeLanguageInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeRCInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeSystemSpecificInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeSystemSpecificInitialize.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\MSVC-C.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\MSVC-CXX.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\MSVC.cmake;D:\sf\cmake\share\cmake-3.26\Modules\FindPackageHandleStandardArgs.cmake;D:\sf\cmake\share\cmake-3.26\Modules\FindPackageMessage.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows-MSVC-C.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows-MSVC-CXX.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows-MSVC.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\WindowsPaths.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule C:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
D:\sf\cmake\bin\cmake.exe -SC:/Users/yam_l/wallpaper-imgui/wallpaper-imgui -BC:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/build --check-stamp-file C:/Users/yam_l/wallpaper-imgui/wallpaper-imgui/build/CMakeFiles/generate.stamp
=======
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCXXInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeGenericSystem.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeLanguageInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeRCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\WindowsPaths.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeCXXCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeRCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeSystem.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule C:/Users/yam_l/wallpaper-imgui/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -SC:/Users/yam_l/wallpaper-imgui -BC:/Users/yam_l/wallpaper-imgui/build --check-stamp-file C:/Users/yam_l/wallpaper-imgui/build/CMakeFiles/generate.stamp
>>>>>>> origin/main
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
<<<<<<< HEAD
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVConfig-version.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVConfig.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVModules-debug.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVModules-release.cmake;C:\Users\yam_l\wallpaper-imgui\opencv\build\x64\vc16\lib\OpenCVModules.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeCXXCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeRCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\3.26.3\CMakeSystem.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeCInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeCXXInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeCommonLanguageInclude.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeGenericSystem.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeInitializeConfigs.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeLanguageInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeRCInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeSystemSpecificInformation.cmake;D:\sf\cmake\share\cmake-3.26\Modules\CMakeSystemSpecificInitialize.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\MSVC-C.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\MSVC-CXX.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Compiler\MSVC.cmake;D:\sf\cmake\share\cmake-3.26\Modules\FindPackageHandleStandardArgs.cmake;D:\sf\cmake\share\cmake-3.26\Modules\FindPackageMessage.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows-MSVC-C.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows-MSVC-CXX.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows-MSVC.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\Windows.cmake;D:\sf\cmake\share\cmake-3.26\Modules\Platform\WindowsPaths.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\CMakeFiles\generate.stamp</Outputs>
=======
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCXXInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeGenericSystem.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeLanguageInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeRCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\WindowsPaths.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeCXXCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeRCCompiler.cmake;C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\3.25.1-msvc1\CMakeSystem.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\yam_l\wallpaper-imgui\build\CMakeFiles\generate.stamp</Outputs>
>>>>>>> origin/main
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
<<<<<<< HEAD
    <None Include="C:\Users\yam_l\wallpaper-imgui\imgui\backends">
    </None>
    <ClCompile Include="C:\Users\yam_l\wallpaper-imgui\imgui\imgui.cpp" />
    <ClCompile Include="C:\Users\yam_l\wallpaper-imgui\imgui\imgui_demo.cpp" />
    <ClCompile Include="C:\Users\yam_l\wallpaper-imgui\imgui\imgui_draw.cpp" />
    <ClCompile Include="C:\Users\yam_l\wallpaper-imgui\imgui\imgui_freetype.cpp" />
    <ClCompile Include="C:\Users\yam_l\wallpaper-imgui\imgui\imgui_tables.cpp" />
    <ClCompile Include="C:\Users\yam_l\wallpaper-imgui\imgui\imgui_widgets.cpp" />
=======
    <ClInclude Include="C:\Users\yam_l\wallpaper-imgui\imgui\imconfig.h" />
    <ClCompile Include="C:\Users\yam_l\wallpaper-imgui\imgui\imgui.cpp" />
    <ClInclude Include="C:\Users\yam_l\wallpaper-imgui\imgui\imgui.h" />
    <ClCompile Include="C:\Users\yam_l\wallpaper-imgui\imgui\imgui_demo.cpp" />
    <ClCompile Include="C:\Users\yam_l\wallpaper-imgui\imgui\imgui_draw.cpp" />
    <ClInclude Include="C:\Users\yam_l\wallpaper-imgui\imgui\imgui_internal.h" />
    <ClCompile Include="C:\Users\yam_l\wallpaper-imgui\imgui\imgui_tables.cpp" />
    <ClCompile Include="C:\Users\yam_l\wallpaper-imgui\imgui\imgui_widgets.cpp" />
    <ClInclude Include="C:\Users\yam_l\wallpaper-imgui\imgui\imstb_rectpack.h" />
    <ClInclude Include="C:\Users\yam_l\wallpaper-imgui\imgui\imstb_textedit.h" />
    <ClInclude Include="C:\Users\yam_l\wallpaper-imgui\imgui\imstb_truetype.h" />
>>>>>>> origin/main
    <ClCompile Include="C:\Users\yam_l\wallpaper-imgui\imgui\backends\imgui_impl_dx12.cpp" />
    <ClInclude Include="C:\Users\yam_l\wallpaper-imgui\imgui\backends\imgui_impl_dx12.h" />
    <ClCompile Include="C:\Users\yam_l\wallpaper-imgui\imgui\backends\imgui_impl_win32.cpp" />
    <ClInclude Include="C:\Users\yam_l\wallpaper-imgui\imgui\backends\imgui_impl_win32.h" />
<<<<<<< HEAD
    <ClCompile Include="C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\src\win\ffplay.cpp" />
    <ClCompile Include="C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\src\win\main.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="C:\Users\yam_l\wallpaper-imgui\wallpaper-imgui\build\ZERO_CHECK.vcxproj">
      <Project>{1F064F52-FEE6-3EB8-9369-1CB9DF17663C}</Project>
=======
    <ClCompile Include="C:\Users\yam_l\wallpaper-imgui\src\win\main.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="C:\Users\yam_l\wallpaper-imgui\build\ZERO_CHECK.vcxproj">
      <Project>{C3D41AF6-33E7-32B6-8260-5AA92DFAFCEC}</Project>
>>>>>>> origin/main
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>